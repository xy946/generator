package classfile;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import com.zhzh.util.pagination.PaginationResponse;
import com.zhzh.model.queryparam.QueryParam;
import com.zhzh.util.model.ResultVO;
import com.zhzh.util.model.StatusCode;
import com.zhzh.model.${ClassName};
import com.zhzh.service.${ClassName}Service;

/**
 * ${functionName}
 * @author yzc
 * @date ${date}
 */
@RestController
@RequestMapping("/pc/${className}")
public class ${ClassName}Controller{

    @Autowired
    private ${ClassName}Service ${className}Service;

    /**
     * @api {post}  /pc/${className}/insert   新增${functionName}
     * @apiName insert
     * @apiGroup ${functionName}
     * @apiVersion 0.1.0
     * @apiDescription 新增${functionName}
     #foreach( $rs in $request )
* ${rs}
     #end
     *
     * @apiSuccess {String} code 结果码
     * @apiSuccess {String} msg  消息说明
     * @apiSuccess {String} rows 数据组合
     * @apiSuccessExample Success-Response:
     *  HTTP/1.1 200 OK
     *	    {
     *          "code": "200",
     *          "msg": "SUCCESS",
     *          "rows": 1
     *      }
     *
     *  @apiErrorExample {json} Error-Response:
     *  HTTP/1.1 404 Not Found
     *    {
     *		"code": "999",
     *		"msg": "操作失败，异常信息为：参数id不能为空",
     *	    "rows": ""
     *	  }
     */
    @PostMapping("/insert")
    public ResultVO insert(${ClassName} ${className}) {
        int count = ${className}Service.insert(${className});
        return new ResultVO(StatusCode.RESULT_SUCCESS,count);
    }


    /**
     * @api {post}  /pc/${className}/update   修改${functionName}
     * @apiName update
     * @apiGroup ${functionName}
     * @apiVersion 0.1.0
     * @apiDescription 修改${functionName}
     #foreach( $rs in $request )
* ${rs}
     #end
     *
     * @apiSuccess {String} code 结果码
     * @apiSuccess {String} msg  消息说明
     * @apiSuccess {String} rows 数据组合
     * @apiSuccessExample Success-Response:
     *  HTTP/1.1 200 OK
     *	    {
     *          "code": "200",
     *          "msg": "SUCCESS",
     *          "rows": 1
     *      }
     *
     *  @apiErrorExample {json} Error-Response:
     *  HTTP/1.1 404 Not Found
     *    {
     *		"code": "999",
     *		"msg": "操作失败，异常信息为：参数id不能为空",
     *	    "rows": ""
     *	  }
     */
    @PostMapping("/update")
    public ResultVO update(${ClassName} ${className}) {
        int count = ${className}Service.update(${className});
        return new ResultVO(StatusCode.RESULT_SUCCESS,count);
    }


    /**
     * @api {get}  /pc/${className}/findList   条件分页查询${functionName}列表
     * @apiName findList
     * @apiGroup ${functionName}
     * @apiVersion 0.1.0
     * @apiDescription ${functionName}
     *
     * @apiParam {Integer}        pageNum       当前数据页码(必填)
     * @apiParam {Integer}        pageSize        单页数据量(必填)

     #foreach( $rs in $response )
* ${rs}
     #end
     *
     * @apiSuccess {Long}         pageDataSize    数据总数
     * @apiSuccess {String}       pageDataList    数据结果集
     * @apiSuccess {Integer}      pageNum       当前数据页码
     * @apiSuccess {Integer}      pageSize        单页数据量
     * @apiSuccess {Integer}      total        总页数
     * @apiSuccess {String}       code 结果码
     * @apiSuccess {String}       msg  消息说明
     * @apiSuccess {String}       rows 数据组合
     * @apiSuccessExample Success-Response:
     *  HTTP/1.1 200 OK
     *	    {
     *          "code": "200",
     *          "msg": "SUCCESS",
     *          "rows": 1
     *      }
     *
     *  @apiErrorExample {json} Error-Response:
     *  HTTP/1.1 404 Not Found
     *    {
     *		"code": "999",
     *		"msg": "操作失败，异常信息为：参数id不能为空",
     *	    "rows": ""
     *	  }
     */
    @GetMapping("/findList")
    public ResultVO findList(QueryParam param){
        PaginationResponse<${ClassName}> response = ${className}Service.findList(param);
        return new ResultVO(StatusCode.RESULT_SUCCESS,response);
    }


    /**
     * @api {get}  /pc/${className}/findById   通过id查看${functionName}详细信息
     * @apiName findById
     * @apiGroup ${functionName}
     * @apiVersion 0.1.0
     * @apiDescription 通过id查看${functionName}详细信息
     *
     * @apiParam {Integer}        id              主键id(必填)
     *
     #foreach( $rs in $response )
* ${rs}
     #end
     *
     * @apiSuccess {String} code 结果码
     * @apiSuccess {String} msg  消息说明
     * @apiSuccess {String} rows 数据组合
     * @apiSuccessExample Success-Response:
     *  HTTP/1.1 200 OK
     *	    {
     *          "code": "200",
     *          "msg": "SUCCESS",
     *          "rows": 1
     *      }
     *
     *  @apiErrorExample {json} Error-Response:
     *  HTTP/1.1 404 Not Found
     *    {
     *		"code": "999",
     *		"msg": "操作失败，异常信息为：参数id不能为空",
     *	    "rows": ""
     *	  }
     */
    @GetMapping("/findById")
    public ResultVO getInfo(Integer id) {
        ${ClassName} ${className} = ${className}Service.findById(id);
        if(${className}==null){
            return new ResultVO(StatusCode.DATA_NULL);
        }
        return new ResultVO(StatusCode.RESULT_SUCCESS,${className});
    }


    /**
     * @api {get}  /pc/${className}/deleteById     通过id删除${functionName}
     * @apiName deleteById
     * @apiGroup ${functionName}
     * @apiVersion 0.1.0
     * @apiDescription 通过id删除${functionName}
     *
     * @apiParam   {Integer}       id            id(必填)
     *
     * @apiSuccess {String} code 结果码
     * @apiSuccess {String} msg  消息说明
     * @apiSuccess {String} rows 数据组合
     * @apiSuccessExample Success-Response:
     *  HTTP/1.1 200 OK
     *	    {
     *          "code": "200",
     *          "msg": "SUCCESS",
     *          "rows": 1
     *      }
     *
     *  @apiErrorExample {json} Error-Response:
     *  HTTP/1.1 404 Not Found
     *    {
     *		"code": "999",
     *		"msg": "操作失败，异常信息为：参数id不能为空",
     *	    "rows": ""
     *	  }
     */
    @GetMapping("/deleteById")
    public ResultVO deleteById(Integer id) {
        int count = ${className}Service.deleteById(id);
        if(count==0){
            return new ResultVO(StatusCode.OPERA_DATA_NULL);
        }else {
            return new ResultVO(StatusCode.RESULT_SUCCESS,count);
        }
    }

}
